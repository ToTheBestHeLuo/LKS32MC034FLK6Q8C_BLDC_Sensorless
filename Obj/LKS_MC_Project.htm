<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Obj\LKS_MC_Project.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Obj\LKS_MC_Project.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Thu Dec 05 14:01:27 2024
<BR><P>
<H3>Maximum Stack Usage =        296 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; Hardware_init &rArr; MCPWM_init &rArr; MCPWM_Init
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[37]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[7]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">NMI_Handler</a><BR>
 <LI><a href="#[8]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">HardFault_Handler</a><BR>
 <LI><a href="#[9]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">SVC_Handler</a><BR>
 <LI><a href="#[a]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">PendSV_Handler</a><BR>
 <LI><a href="#[18]">WAKE_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[18]">WAKE_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[16]">ADC_IRQHandler</a> from interrupt.o(i.ADC_IRQHandler) referenced from startup_lks32mc03x.o(RESET)
 <LI><a href="#[1c]">BLDC_PWM_UH_VL</a> from bldcdriver.o(i.BLDC_PWM_UH_VL) referenced 2 times from bldcdriver.o(.data)
 <LI><a href="#[1d]">BLDC_PWM_UH_WL</a> from bldcdriver.o(i.BLDC_PWM_UH_WL) referenced 2 times from bldcdriver.o(.data)
 <LI><a href="#[1f]">BLDC_PWM_VH_UL</a> from bldcdriver.o(i.BLDC_PWM_VH_UL) referenced 2 times from bldcdriver.o(.data)
 <LI><a href="#[1e]">BLDC_PWM_VH_WL</a> from bldcdriver.o(i.BLDC_PWM_VH_WL) referenced 2 times from bldcdriver.o(.data)
 <LI><a href="#[20]">BLDC_PWM_WH_UL</a> from bldcdriver.o(i.BLDC_PWM_WH_UL) referenced 2 times from bldcdriver.o(.data)
 <LI><a href="#[21]">BLDC_PWM_WH_VL</a> from bldcdriver.o(i.BLDC_PWM_WH_VL) referenced 2 times from bldcdriver.o(.data)
 <LI><a href="#[15]">CMP_IRQHandler</a> from interrupt.o(i.CMP_IRQHandler) referenced from startup_lks32mc03x.o(RESET)
 <LI><a href="#[17]">DMA_IRQHandler</a> from interrupt.o(i.DMA_IRQHandler) referenced from startup_lks32mc03x.o(RESET)
 <LI><a href="#[12]">GPIO_IRQHandler</a> from interrupt.o(i.GPIO_IRQHandler) referenced from startup_lks32mc03x.o(RESET)
 <LI><a href="#[13]">HALL_IRQHandler</a> from interrupt.o(i.HALL_IRQHandler) referenced from startup_lks32mc03x.o(RESET)
 <LI><a href="#[8]">HardFault_Handler</a> from startup_lks32mc03x.o(.text) referenced from startup_lks32mc03x.o(RESET)
 <LI><a href="#[10]">I2C_IRQHandler</a> from interrupt.o(i.I2C_IRQHandler) referenced from startup_lks32mc03x.o(RESET)
 <LI><a href="#[e]">MCPWM0_IRQHandler</a> from interrupt.o(i.MCPWM0_IRQHandler) referenced from startup_lks32mc03x.o(RESET)
 <LI><a href="#[f]">MCPWM1_IRQHandler</a> from interrupt.o(i.MCPWM1_IRQHandler) referenced from startup_lks32mc03x.o(RESET)
 <LI><a href="#[7]">NMI_Handler</a> from startup_lks32mc03x.o(.text) referenced from startup_lks32mc03x.o(RESET)
 <LI><a href="#[a]">PendSV_Handler</a> from startup_lks32mc03x.o(.text) referenced from startup_lks32mc03x.o(RESET)
 <LI><a href="#[6]">Reset_Handler</a> from startup_lks32mc03x.o(.text) referenced from startup_lks32mc03x.o(RESET)
 <LI><a href="#[11]">SPI_IRQHandler</a> from interrupt.o(i.SPI_IRQHandler) referenced from startup_lks32mc03x.o(RESET)
 <LI><a href="#[9]">SVC_Handler</a> from startup_lks32mc03x.o(.text) referenced from startup_lks32mc03x.o(RESET)
 <LI><a href="#[19]">SW_IRQHandler</a> from interrupt.o(i.SW_IRQHandler) referenced from startup_lks32mc03x.o(RESET)
 <LI><a href="#[b]">SysTick_Handler</a> from interrupt.o(i.SysTick_Handler) referenced from startup_lks32mc03x.o(RESET)
 <LI><a href="#[1a]">SystemInit</a> from hardware_init.o(i.SystemInit) referenced from startup_lks32mc03x.o(.text)
 <LI><a href="#[c]">TIMER0_IRQHandler</a> from interrupt.o(i.TIMER0_IRQHandler) referenced from startup_lks32mc03x.o(RESET)
 <LI><a href="#[d]">TIMER1_IRQHandler</a> from interrupt.o(i.TIMER1_IRQHandler) referenced from startup_lks32mc03x.o(RESET)
 <LI><a href="#[14]">UART_IRQHandler</a> from interrupt.o(i.UART_IRQHandler) referenced from startup_lks32mc03x.o(RESET)
 <LI><a href="#[18]">WAKE_IRQHandler</a> from interrupt.o(i.WAKE_IRQHandler) referenced from startup_lks32mc03x.o(RESET)
 <LI><a href="#[22]">__main</a> from __main.o(!!!main) referenced from startup_lks32mc03x.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[22]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[23]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[25]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[68]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[69]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[26]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[6a]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[2a]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[6b]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[6c]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[6d]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[6e]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[6f]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[70]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[71]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[72]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[73]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[74]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[75]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[76]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[77]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[78]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[79]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[7a]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[7b]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[7c]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[7d]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[7e]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[7f]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[2f]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[80]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[81]"></a>__rt_lib_shutdown_fini_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[82]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[83]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000011))

<P><STRONG><a name="[84]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000012))

<P><STRONG><a name="[85]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[86]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[87]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[24]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[88]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[27]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[29]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[89]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[2b]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; Hardware_init &rArr; MCPWM_init &rArr; MCPWM_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[8a]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[39]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[2e]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[8b]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[30]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[6]"></a>Reset_Handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_lks32mc03x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc03x.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lks32mc03x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc03x.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lks32mc03x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc03x.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lks32mc03x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc03x.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lks32mc03x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc03x.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_lks32mc03x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[33]"></a>_memset_w</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>

<P><STRONG><a name="[32]"></a>_memset</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[34]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCPWM_StructInit
</UL>

<P><STRONG><a name="[8c]"></a>__rt_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[8d]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[8e]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[35]"></a>__rt_memclr_w</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[8f]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdivfast.o(.text), UNUSED)

<P><STRONG><a name="[43]"></a>__aeabi_uidivmod</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, aeabi_sdivfast.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLDC_ZeroCrossCompTask
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLDC_HighSpeedTask
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>

<P><STRONG><a name="[90]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdivfast.o(.text), UNUSED)

<P><STRONG><a name="[91]"></a>__aeabi_idivmod</STRONG> (Thumb, 460 bytes, Stack size 8 bytes, aeabi_sdivfast.o(.text), UNUSED)

<P><STRONG><a name="[92]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[93]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[94]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[28]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[2d]"></a>exit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[95]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[36]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[96]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[31]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[97]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[98]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[3c]"></a>ADC_ClearIRQFlag</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lks32mc03x_adc.o(i.ADC_ClearIRQFlag))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>

<P><STRONG><a name="[99]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[3b]"></a>ADC_GetIRQFlag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lks32mc03x_adc.o(i.ADC_GetIRQFlag))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>

<P><STRONG><a name="[16]"></a>ADC_IRQHandler</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, interrupt.o(i.ADC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ADC_IRQHandler &rArr; BLDC_LowSpeedTask
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLDC_LowSpeedTask
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetIRQFlag
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ClearIRQFlag
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc03x.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>ADC_Init</STRONG> (Thumb, 234 bytes, Stack size 24 bytes, lks32mc03x_adc.o(i.ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ADC_Init &rArr; SYS_AnalogModuleClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_AnalogModuleClockCmd
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Trim
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hardware_init
</UL>

<P><STRONG><a name="[59]"></a>ADC_StructInit</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, lks32mc03x_adc.o(i.ADC_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hardware_init
</UL>

<P><STRONG><a name="[42]"></a>BLDC_HighSpeedTask</STRONG> (Thumb, 576 bytes, Stack size 24 bytes, bldcdriver.o(i.BLDC_HighSpeedTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = BLDC_HighSpeedTask
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCPWM0_IRQHandler
</UL>

<P><STRONG><a name="[3d]"></a>BLDC_LowSpeedTask</STRONG> (Thumb, 1080 bytes, Stack size 24 bytes, bldcdriver.o(i.BLDC_LowSpeedTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = BLDC_LowSpeedTask
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>

<P><STRONG><a name="[44]"></a>BLDC_ZeroCrossCompTask</STRONG> (Thumb, 202 bytes, Stack size 24 bytes, bldcdriver.o(i.BLDC_ZeroCrossCompTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = BLDC_ZeroCrossCompTask
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMP_IRQHandler
</UL>

<P><STRONG><a name="[15]"></a>CMP_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, interrupt.o(i.CMP_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CMP_IRQHandler &rArr; BLDC_ZeroCrossCompTask
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLDC_ZeroCrossCompTask
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc03x.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>CMP_Init</STRONG> (Thumb, 302 bytes, Stack size 24 bytes, lks32mc03x_cmp.o(i.CMP_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = CMP_Init &rArr; SYS_AnalogModuleClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_ModuleClockCmd
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_AnalogModuleClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hardware_init
</UL>

<P><STRONG><a name="[51]"></a>CMP_StructInit</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, lks32mc03x_cmp.o(i.CMP_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hardware_init
</UL>

<P><STRONG><a name="[47]"></a>DAC_Init</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, lks32mc03x_dac.o(i.DAC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = DAC_Init &rArr; SYS_AnalogModuleClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_AnalogModuleClockCmd
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Trim
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hardware_init
</UL>

<P><STRONG><a name="[50]"></a>DAC_OutputVoltage</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, lks32mc03x_dac.o(i.DAC_OutputVoltage))
<BR><BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCPWM0_IRQHandler
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hardware_init
</UL>

<P><STRONG><a name="[4f]"></a>DAC_StructInit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lks32mc03x_dac.o(i.DAC_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hardware_init
</UL>

<P><STRONG><a name="[17]"></a>DMA_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupt.o(i.DMA_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc03x.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>GPIO_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupt.o(i.GPIO_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc03x.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>GPIO_Init</STRONG> (Thumb, 144 bytes, Stack size 12 bytes, lks32mc03x_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hardware_init
</UL>

<P><STRONG><a name="[4e]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 282 bytes, Stack size 0 bytes, lks32mc03x_gpio.o(i.GPIO_PinAFConfig))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hardware_init
</UL>

<P><STRONG><a name="[3a]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lks32mc03x_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>

<P><STRONG><a name="[3e]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lks32mc03x_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCPWM_init
</UL>

<P><STRONG><a name="[4c]"></a>GPIO_StructInit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lks32mc03x_gpio.o(i.GPIO_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hardware_init
</UL>

<P><STRONG><a name="[13]"></a>HALL_IRQHandler</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, interrupt.o(i.HALL_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc03x.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>HALL_Init</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, lks32mc03x_hall.o(i.HALL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HALL_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_ModuleClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hardware_init
</UL>

<P><STRONG><a name="[54]"></a>HALL_StructInit</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, lks32mc03x_hall.o(i.HALL_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hardware_init
</UL>

<P><STRONG><a name="[49]"></a>Hardware_init</STRONG> (Thumb, 678 bytes, Stack size 112 bytes, hardware_init.o(i.Hardware_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = Hardware_init &rArr; MCPWM_init &rArr; MCPWM_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_init
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TempSensor_Init
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimerStrutInit
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimerInit
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OPA_StructInit
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OPA_OUT
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OPA_Init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_StrutInit
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Init
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ENABLE
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_DISABLE
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HALL_StructInit
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HALL_Init
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_StructInit
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_OutputVoltage
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_Init
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMP_StructInit
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMP_Init
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StructInit
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCPWM_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10]"></a>I2C_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupt.o(i.I2C_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc03x.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>IWDG_DISABLE</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lks32mc03x_iwdg.o(i.IWDG_DISABLE))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hardware_init
</UL>

<P><STRONG><a name="[5d]"></a>IWDG_ENABLE</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lks32mc03x_iwdg.o(i.IWDG_ENABLE))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hardware_init
</UL>

<P><STRONG><a name="[67]"></a>IWDG_Feed</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lks32mc03x_iwdg.o(i.IWDG_Feed))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5c]"></a>IWDG_Init</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, lks32mc03x_iwdg.o(i.IWDG_Init))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hardware_init
</UL>

<P><STRONG><a name="[5b]"></a>IWDG_StrutInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lks32mc03x_iwdg.o(i.IWDG_StrutInit))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hardware_init
</UL>

<P><STRONG><a name="[e]"></a>MCPWM0_IRQHandler</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, interrupt.o(i.MCPWM0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = MCPWM0_IRQHandler &rArr; BLDC_HighSpeedTask
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLDC_HighSpeedTask
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_OutputVoltage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc03x.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>MCPWM1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupt.o(i.MCPWM1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc03x.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>MCPWM_Init</STRONG> (Thumb, 728 bytes, Stack size 24 bytes, lks32mc03x_mcpwm.o(i.MCPWM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = MCPWM_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_ModuleClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCPWM_init
</UL>

<P><STRONG><a name="[60]"></a>MCPWM_StructInit</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, lks32mc03x_mcpwm.o(i.MCPWM_StructInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MCPWM_StructInit
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCPWM_init
</UL>

<P><STRONG><a name="[61]"></a>MCPWM_SwapFunction</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, lks32mc03x_mcpwm.o(i.MCPWM_SwapFunction))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCPWM_init
</UL>

<P><STRONG><a name="[64]"></a>MCPWM_Update</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, lks32mc03x_mcpwm.o(i.MCPWM_Update))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5a]"></a>MCPWM_init</STRONG> (Thumb, 224 bytes, Stack size 144 bytes, hardware_init.o(i.MCPWM_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = MCPWM_init &rArr; MCPWM_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCPWM_SwapFunction
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCPWM_StructInit
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCPWM_Init
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hardware_init
</UL>

<P><STRONG><a name="[57]"></a>OPA_Init</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, lks32mc03x_opa.o(i.OPA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OPA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hardware_init
</UL>

<P><STRONG><a name="[58]"></a>OPA_OUT</STRONG> (Thumb, 48 bytes, Stack size 4 bytes, lks32mc03x_opa.o(i.OPA_OUT))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = OPA_OUT
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hardware_init
</UL>

<P><STRONG><a name="[56]"></a>OPA_StructInit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lks32mc03x_opa.o(i.OPA_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hardware_init
</UL>

<P><STRONG><a name="[66]"></a>PWMOutputs</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, lks32mc03x_mcpwm.o(i.PWMOutputs))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[41]"></a>Read_Trim</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, lks32mc03x_nvr.o(i.Read_Trim))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TempSensor_Init
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_VolSelModule
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_Init
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[11]"></a>SPI_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupt.o(i.SPI_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc03x.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>SW_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupt.o(i.SW_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc03x.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>SYS_AnalogModuleClockCmd</STRONG> (Thumb, 68 bytes, Stack size 4 bytes, lks32mc03x_sys.o(i.SYS_AnalogModuleClockCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SYS_AnalogModuleClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_Init
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMP_Init
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[46]"></a>SYS_ModuleClockCmd</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, lks32mc03x_sys.o(i.SYS_ModuleClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimerInit
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCPWM_Init
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HALL_Init
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMP_Init
</UL>

<P><STRONG><a name="[62]"></a>SYS_VolSelModule</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, lks32mc03x_sys.o(i.SYS_VolSelModule))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SYS_VolSelModule
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Trim
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[b]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupt.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc03x.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>SystemInit</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, hardware_init.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SystemInit &rArr; SYS_VolSelModule
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_VolSelModule
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc03x.o(.text)
</UL>
<P><STRONG><a name="[c]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupt.o(i.TIMER0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc03x.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupt.o(i.TIMER1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc03x.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>TIM_TimerCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lks32mc03x_timer.o(i.TIM_TimerCmd))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[53]"></a>TIM_TimerInit</STRONG> (Thumb, 198 bytes, Stack size 16 bytes, lks32mc03x_timer.o(i.TIM_TimerInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_TimerInit
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_ModuleClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hardware_init
</UL>

<P><STRONG><a name="[52]"></a>TIM_TimerStrutInit</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, lks32mc03x_timer.o(i.TIM_TimerStrutInit))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hardware_init
</UL>

<P><STRONG><a name="[55]"></a>TempSensor_Init</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, lks32mc03x_tmp.o(i.TempSensor_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TempSensor_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Trim
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hardware_init
</UL>

<P><STRONG><a name="[14]"></a>UART_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupt.o(i.UART_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc03x.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>WAKE_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupt.o(i.WAKE_IRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WAKE_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WAKE_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc03x.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>delay_init</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, delay.o(i.delay_init))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hardware_init
</UL>

<P><STRONG><a name="[63]"></a>delay_ms</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, delay.o(i.delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5e]"></a>delay_us</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, delay.o(i.delay_us))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hardware_init
</UL>

<P><STRONG><a name="[2c]"></a>main</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = main &rArr; Hardware_init &rArr; MCPWM_init &rArr; MCPWM_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimerCmd
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMOutputs
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCPWM_Update
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Feed
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hardware_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[1c]"></a>BLDC_PWM_UH_VL</STRONG> (Thumb, 108 bytes, Stack size 4 bytes, bldcdriver.o(i.BLDC_PWM_UH_VL))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = BLDC_PWM_UH_VL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bldcdriver.o(.data)
</UL>
<P><STRONG><a name="[1d]"></a>BLDC_PWM_UH_WL</STRONG> (Thumb, 108 bytes, Stack size 4 bytes, bldcdriver.o(i.BLDC_PWM_UH_WL))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = BLDC_PWM_UH_WL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bldcdriver.o(.data)
</UL>
<P><STRONG><a name="[1f]"></a>BLDC_PWM_VH_UL</STRONG> (Thumb, 108 bytes, Stack size 4 bytes, bldcdriver.o(i.BLDC_PWM_VH_UL))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = BLDC_PWM_VH_UL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bldcdriver.o(.data)
</UL>
<P><STRONG><a name="[1e]"></a>BLDC_PWM_VH_WL</STRONG> (Thumb, 110 bytes, Stack size 4 bytes, bldcdriver.o(i.BLDC_PWM_VH_WL))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = BLDC_PWM_VH_WL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bldcdriver.o(.data)
</UL>
<P><STRONG><a name="[20]"></a>BLDC_PWM_WH_UL</STRONG> (Thumb, 108 bytes, Stack size 4 bytes, bldcdriver.o(i.BLDC_PWM_WH_UL))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = BLDC_PWM_WH_UL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bldcdriver.o(.data)
</UL>
<P><STRONG><a name="[21]"></a>BLDC_PWM_WH_VL</STRONG> (Thumb, 110 bytes, Stack size 4 bytes, bldcdriver.o(i.BLDC_PWM_WH_VL))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = BLDC_PWM_WH_VL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bldcdriver.o(.data)
</UL><P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[38]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
